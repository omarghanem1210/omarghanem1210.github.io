approx(x, y)
simulate(0, 1)
simulate <- function(mean, var, get_estimate=FALSE){
points <- rnorm(500, mean, var)
s = var
if(get_estimate){
s = var(points)
}
return((mean(points) - mean) / (s / sqrt(n)))
}
simulate(0, 1)
simulate <- function(mean, var, get_estimate=FALSE){
points <- rnorm(500, mean, var)
s = var
if(get_estimate){
s = var(points)
}
return((mean(points) - mean) / (s / sqrt(n)))
}
simulate(0, 1)
simulate <- function(mean, var, get_estimate=FALSE){
points <- rnorm(500, mean, var)
s = var
if(get_estimate){
s = var(points)
}
return((mean(points) - mean) / (s / sqrt(500)))
}
simulate(0, 1)
simulate <- function(mean, var, get_estimate=FALSE){
points <- rnorm(500, mean, var)
s = var
if(get_estimate){
s = var(points)
}
return((mean(points) - mean) / (s / sqrt(500)))
}
simulate(0, 1)
data <- replicate(10000, simulate(5, 10))
data
hist(data)
curve(dnorm(data_1, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
curve(dnorm(data_1, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
data_1 <- replicate(10000, simulate(5, 10))
curve(dnorm(data_1, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
help(dnorm)
curve(dnorm(x, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
data_1 <- replicate(10000, simulate(5, 10))
curve(dnorm(x, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
data_1 <- replicate(10000, simulate(5, 10))
curve(dnorm(x, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
hist(data_1, probability = TRUE)
curve(dnorm(x, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
x <- seq(min(data_1), max(data_1), length = 100)
curve(dnorm(x, mean=5, sd=sqrt(10)),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(aes(data_1)) +
geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +
stat_function(fun = dnorm, args = list(mean=mean(data$x), sd=sd(data$x)))
library(ggplot2)
data_1 <- replicate(10000, simulate(5, 10))
ggplot(aes(data_1)) +
geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +
stat_function(fun = dnorm, args = list(mean=mean(data$x), sd=sd(data$x)))
data_1
ggplot(aes(data_1)) +
ggplot(aes(data_1)) +
stat_function(fun = dnorm, args = list(mean=5, sd=sqrt(10))
geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +
ggplot(aes(data_1)) +
geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +
stat_function(fun = dnorm, args = list(mean=5, sd=sqrt(10)))
help("geom_histogram")
ggplot(data_1) +
geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +
stat_function(fun = dnorm, args = list(mean=5, sd=sqrt(10)))
ggplot() + aes(data_1)
ggplot() + aes(data_1)
ggplot(mapping = aes(data_1)) +
geom_histogram(aes(y = ..density..), fill='lightgray', col='black') +
stat_function(fun = dnorm, args = list(mean=5, sd=sqrt(10)))
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
housetasks
class(housetasks)
dt <- as.table(as.matrix(housetasks))
# 2. Graph
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
# 2. Graph
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
library("gplots")
# 2. Graph
balloonplot(t(dt), main ="housetasks", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
chisq <- chisq.test(housetasks)
chisq
help("qchisq")
qchisq(0.95, 1)
help("chisq.test")
help("data.frame")
row.names(data) <- c('down', 'sideways', 'up')
data <- data.frame(down = c(24, 8, 10, 42), sideways = c(8, 13, 9, 30), up = c(13, 11, 64, 88))
row.names(data) <- c('down', 'sideways', 'up')
data <- data.frame(down = c(24, 8, 10), sideways = c(8, 13, 9), up = c(13, 11, 64))
row.names(data) <- c('down', 'sideways', 'up')
data
as.table(data)
help("chisq.test")
chisq.test(data)
summary(chisq.test(data))
chisq.test(data)['statistic']
chisq.test(data, correct = FALSE)
chisq.test(data, correct = FALSE)['parameter']
chisq.test(data, correct = FALSE)['stdres']
chisq.test(data, correct = FALSE)['method']
mean(2)
mean(2*22)
data <- replicate(1000, simulate)
data
data <- replicate(1000, simulate())
data <- replicate(1000, simulate
data <- replicate(1000, simulate)
data <- replicate(1000, simulate)
data
help("replicate")
help("replications")
mean(2)
simulate <- function(n = 2){
x <- runif(1)
return(mean(2 * x))
}
data <- replicate(1000, simulate())
data
var(data)
simulate <- function(n = 2){
x <- runif(1)
return(mean(2 * x))
}
data <- replicate(10000, simulate())
var(data)
simulate <- function(n = 2){
x <- runif(1)
return(mean(3 * x))
}
data <- replicate(10000, simulate())
var(data)
data <- runif(1000)
var(3 * data)
var(data)
data <- runif(10000)
var(3 * data)
var(data) + var(data) + var(data)
var(data) + var(data) + var(data)
var(3 * data)
(var(data) + var(data) + var(data)) * (1 / 3)
var(data)
var(data)
(var(data) + var(data) + var(data)) * (1 / 3)
(var(data) + var(data) + var(data))
var(3 * data)
(1 / 3**2) * var(3 * data)
(var(data) + var(data) + var(data))
library(knitr)
library(ggplot2)
library(plot3D)
help("plot3D")
library(rgl)
rnorm(3)
set.seed(42)
x <-  c(0, 5)
y <- c(0, 5)
principal_vector <- c(2, 6)
first_vector <- c(1, 2, 3)
second_vector <- c(-2, 3, 1)
simulate <- function(principal_vector, num){
dimensions <- length(principal_vector)
data <- as.data.frame(matrix(nrow = 0, ncol = dimensions))
for (i in 1:num) {
new_point <- runif(1, 0, 40)*principal_vector + rnorm(dimensions, 0, 2)
data <- rbind(data, new_point)
}
return(data
)
}
simulate_3d <- function(first_vector, second_vector, num){
dimensions <- length(first_vector)
data <- as.data.frame(matrix(nrow = 0, ncol = dimensions))
for (i in 1:num) {
new_point <- runif(1, 0, 40)*first_vector + runif(1, 0, 40) * second_vector + rnorm(dimensions, 0, 2)
data <- rbind(data, new_point)
}
return(data)
}
data <- simulate(principal_vector, 40)
colnames(data) <- c('x', 'y')
data
ggplot(data, aes(x=x, y=y)) + geom_point() + geom_abline(intercept = 0, slope = 3, color='Blue')
data.pca <- prcomp(data, scale. = FALSE)
three_d_data <- simulate_3d(first_vector, second_vector, num = 40)
colnames(three_d_data) <- c('x', 'y', 'z')
plot3d(dat, type = 'n', xlim = c(-1, 1), ylim = c(-1, 1), zlim = c(-3, 3), xlab = '', ylab = '', zlab = '')
plot3d(three_d_data)
planes3d(-1, -1, 1, col = 'blue', alpha = 0.6)
plot3d(data, type = 'n', xlim = c(-1, 1), ylim = c(-1, 1), zlim = c(-3, 3), xlab = '', ylab = '', zlab = '')
plot3d(three_d_data)
planes3d(-1, -1, 1, col = 'blue', alpha = 0.6)
knitr::include_graphics('images/Rplot01.png')
x=matrix(c(exp(-0.2*(-(1:300)/10))*cos(-(1:300)/10),
exp(-0.2*(-(1:300)/10))*sin(-(1:300)/10)),
ncol=2)
x
data.frame(x)
x <- data.frame(x)
help(plot)
x
x <- data.frame(x)
x
x=matrix(c(exp(-0.2*(-(1:300)/10))*cos(-(1:300)/10),
exp(-0.2*(-(1:300)/10))*sin(-(1:300)/10)),
ncol=2)
x
data.frame(x)
x
data.frame(x)
plot(x)
x=data.frame(c(exp(-0.2*(-(1:300)/10))*cos(-(1:300)/10),
exp(-0.2*(-(1:300)/10))*sin(-(1:300)/10)),
ncol=2)
x
matrix
as.data.frame(x)
x
x=matrix(c(exp(-0.2*(-(1:300)/10))*cos(-(1:300)/10),
exp(-0.2*(-(1:300)/10))*sin(-(1:300)/10)),
ncol=2)
x
x[1]
x[1, ]
x[, 1]
x[, 2]
x
x[, 1]
data=matrix(c(exp(-0.2*(-(1:300)/10))*cos(-(1:300)/10),
exp(-0.2*(-(1:300)/10))*sin(-(1:300)/10)),
ncol=2)
data
x <- data[, 1]
y <- data[, 2]
ggplot(mapping = aes(x=x, y=y)) + geom_point()
ggplot(mapping = aes(x=x, y=y)) + geom_point(color='blue')
ggplot(mapping = aes(x=x, y=y)) + geom_point()
pi
theta <- runif(100, 0, 2*pi)
theta
r = 1 + cos(theta)
r
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
help("matrix")
m <- matrix(c(x, y), ncol = 2)
m
x
m
help("rotationMatrix")
theta <- runif(100, 0, 2*pi)
r = 1 + sin(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
rotation_matrix %*% m
rotation_matrix <- matrix(c(cos(pi / 4), sin(pi / 4), -sin(pi/4), cos(pi/4)))
rotation_matrix %*% m
rotation_matrix <- matrix(c(cos(pi / 4), sin(pi / 4), -sin(pi/4), cos(pi/4)), ncol = 2)
rotation_matrix %*% m
rotation_matrix
m
rotation_matrix %% t(m)
t(m)
dim(t(m))
dim(rotation_matrix)
rotation_matrix %% t(m)
rotation_matrix %*% t(m)
new_points <- t(rotation_matrix %*% t(m))
new_points
data <- t(rotation_matrix %*% t(m))
x <- data[, 1]
y <- data[, 2]
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
m <- matrix(c(x, y), ncol = 2)
rotation_matrix <- matrix(c(cos(pi), sin(pi), -sin(pi), cos(pi)), ncol = 2)
data <- t(rotation_matrix %*% t(m))
x <- data[, 1]
y <- data[, 2]
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
m <- matrix(c(x, y), ncol = 2)
rotation_matrix <- matrix(c(cos(pi/2), sin(pi/2), -sin(pi/2), cos(pi/2)), ncol = 2)
data <- t(rotation_matrix %*% t(m))
x <- data[, 1]
y <- data[, 2]
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
m <- matrix(c(x, y), ncol = 2)
rotation_matrix <- matrix(c(cos(pi), sin(pi), -sin(pi), cos(pi)), ncol = 2)
data <- t(rotation_matrix %*% t(m))
x <- data[, 1]
y <- data[, 2]
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
m <- matrix(c(x, y), ncol = 2)
rotation_matrix <- matrix(c(cos(pi/3), sin(pi/3), -sin(pi/3), cos(pi/3)), ncol = 2)
data <- t(rotation_matrix %*% t(m))
x <- data[, 1]
y <- data[, 2]
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 - sin(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 0.5 * (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = -0.5 * (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 2 * (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 + cos(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 2 * (1 + cos(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 2 * (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 4 * (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = sqrt(2) * (1 - sin(theta))
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(100, 0, 2*pi)
r = 1 - sin(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
theta <- runif(1000, 0, 2*pi)
r = 1 - sin(theta)
x = r * cos(theta)
y = r * sin(theta)
ggplot(mapping = aes(x=x, y=y)) + geom_point()
cor(x, y)
data <- c(
13, 14, 8, 10, 16, 26, 32, 27, 18, 32, 36, 24, 22, 23, 22, 18,
25, 21, 21, 14, 8, 11, 14, 23, 18, 17, 19, 20, 22, 19, 13, 26,
13, 14, 22, 24, 21, 22, 26, 21, 23, 24, 27, 41, 31, 27, 35, 26,
28, 36, 39, 21, 17, 22, 17, 19, 15, 34, 10, 15, 22, 18, 15, 20,
15, 22, 19, 16, 30, 27, 29, 23, 20, 16, 21, 21, 25, 16, 18, 15,
18, 14, 10, 15, 8, 15, 6, 11, 8, 7, 18, 16, 13, 12, 13, 20,
15, 16, 12, 18, 15, 16, 13, 15, 16, 11, 11)
data
hist(data)
data <- c(
13, 14, 8, 10, 16, 26, 32, 27, 18, 32, 36, 24, 22, 23, 22, 18,
25, 21, 21, 14, 8, 11, 14, 23, 18, 17, 19, 20, 22, 19, 13, 26,
13, 14, 22, 24, 21, 22, 26, 21, 23, 24, 27, 41, 31, 27, 35, 26,
28, 36, 39, 21, 17, 22, 17, 19, 15, 34, 10, 15, 22, 18, 15, 20,
15, 22, 19, 16, 30, 27, 29, 23, 20, 16, 21, 21, 25, 16, 18, 15,
18, 14, 10, 15, 8, 15, 6, 11, 8, 7, 18, 16, 13, 12, 13, 20,
15, 16, 12, 18, 15, 16, 13, 15, 16, 11, 11)
hist(data)
ggplot() + geom_histogram(data=data)
ggplot() + geom_histogram(x=data)
data <- as.data.frame(data)
data
ggplot(data) + geom_histogram(x=data)
data <- c(
13, 14, 8, 10, 16, 26, 32, 27, 18, 32, 36, 24, 22, 23, 22, 18,
25, 21, 21, 14, 8, 11, 14, 23, 18, 17, 19, 20, 22, 19, 13, 26,
13, 14, 22, 24, 21, 22, 26, 21, 23, 24, 27, 41, 31, 27, 35, 26,
28, 36, 39, 21, 17, 22, 17, 19, 15, 34, 10, 15, 22, 18, 15, 20,
15, 22, 19, 16, 30, 27, 29, 23, 20, 16, 21, 21, 25, 16, 18, 15,
18, 14, 10, 15, 8, 15, 6, 11, 8, 7, 18, 16, 13, 12, 13, 20,
15, 16, 12, 18, 15, 16, 13, 15, 16, 11, 11)
data <- as.data.frame(data)
ggplot(data) + geom_histogram(mapping = aes(x=data))
data <- c(
13, 14, 8, 10, 16, 26, 32, 27, 18, 32, 36, 24, 22, 23, 22, 18,
25, 21, 21, 14, 8, 11, 14, 23, 18, 17, 19, 20, 22, 19, 13, 26,
13, 14, 22, 24, 21, 22, 26, 21, 23, 24, 27, 41, 31, 27, 35, 26,
28, 36, 39, 21, 17, 22, 17, 19, 15, 34, 10, 15, 22, 18, 15, 20,
15, 22, 19, 16, 30, 27, 29, 23, 20, 16, 21, 21, 25, 16, 18, 15,
18, 14, 10, 15, 8, 15, 6, 11, 8, 7, 18, 16, 13, 12, 13, 20,
15, 16, 12, 18, 15, 16, 13, 15, 16, 11, 11)
ggplot() + geom_histogram(mapping = aes(x=data))
ggplot() + geom_histogram(mapping = aes(x=data), bins=40)
ggplot() + geom_histogram(mapping = aes(x=data), bins=35)
help("qplot")
x <- c(1:40)
ggplot() + geom_histogram(mapping = aes(x=data), bins=35)  +geom_point(aes(y=dpois(x, 1)), colour="red")
ggplot() + geom_histogram(mapping = aes(x=data), bins=35)  +geom_point(aes(y=dpois(x, 1), x=x), colour="red")
help("geom_histogram")
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_point(aes(y=dpois(x, 1), x=x), colour="red")
y <- dpois(x, lambda = mean(data))
mean(data)
data <- c(
13, 14, 8, 10, 16, 26, 32, 27, 18, 32, 36, 24, 22, 23, 22, 18,
25, 21, 21, 14, 8, 11, 14, 23, 18, 17, 19, 20, 22, 19, 13, 26,
13, 14, 22, 24, 21, 22, 26, 21, 23, 24, 27, 41, 31, 27, 35, 26,
28, 36, 39, 21, 17, 22, 17, 19, 15, 34, 10, 15, 22, 18, 15, 20,
15, 22, 19, 16, 30, 27, 29, 23, 20, 16, 21, 21, 25, 16, 18, 15,
18, 14, 10, 15, 8, 15, 6, 11, 8, 7, 18, 16, 13, 12, 13, 20,
15, 16, 12, 18, 15, 16, 13, 15, 16, 11, 11)
x <- c(1:40)
y <- dpois(x, lambda = mean(data))
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_point(aes(y=y, x=x), colour="red")
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red")
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red") + geom_label()
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red") + geom_label('gdfgd')
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red")
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red")
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red")
knitr::opts_chunk$set(fig.pos = '!h')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(knitr)
library(ggplot2)
library(energy)
library(plot3D)
library(rgl)
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red")
```{r, echo=FALSE, fig.cap='Modelling earthquakes counts as a poisson random variable', fig.width = 15, fig.height=9, out.width="70%", fig.pos = "!h"}
ggplot() + geom_histogram(mapping = aes(y = ..density.., x=data), bins=35)  +geom_line(aes(y=y, x=x), colour="red")
quarto render -to-pdf
library(ggplot2)
x <- rnorm(1000)
hist(x)
ggplot() + geom_histogram(mapping = aes(x=x))
library(ggplot2)
x <- rnorm(10000)
ggplot() + geom_histogram(mapping = aes(x=x))
ggplot() + geom_histogram(mapping = aes(x=x)) + geom_density()
ggplot() + geom_histogram(mapping = aes(x=x)) + geom_density(mapping = aes(x=x))
ggplot(aes(x = x, y = after_stat(density))) +
geom_histogram() +
ggplot(aes(x = x, y = after_stat(density))) +
geom_histogram() +
ggplot(aes(x = x, y = after_stat(density))) + geom_histogram() +
ggplot(aes(x = x, y = after_stat(density))) + geom_histogram() +     geom_density(color = "green", linewidth = 2)
ggplot(aes(x = x, y = after_stat(density))) + geom_histogram() +geom_density(color = "green", linewidth = 2)
setwd("D:/Projects/Personal-Website/Blog/posts/Midnight-Ramblings")
